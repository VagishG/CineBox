{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":["file:///home/noobhacker/Documents/Movies/piratebaye/next_app/app/api/all/%5Bslug%5D/torrent/1337x.js"],"sourcesContent":["const cheerio = require('cheerio');\nconst axios = require('axios');\n\n\n\nasync function torrent1337x(query = '', page = '1') {\n\n    const allTorrent = [];\n    let html;\n    const url = 'https://1337xx.to/search/' + query + '/' + page + '/';\n    try{\n        html = await axios.get(url);\n    }catch{\n        return null;\n    }\n\n    const $ = cheerio.load(html.data)\n\n    const links = $('td.name').map((_, element) => {\n        var link = 'https://1337xx.to' + $(element).find('a').next().attr('href');\n        return link;\n\n    }).get();\n\n\n    await Promise.all(links.map(async (element) => {\n\n        const data = {};\n        const labels = ['Category', 'Type', 'Language', 'Size', 'UploadedBy', 'Downloads', 'LastChecked', 'DateUploaded', 'Seeders', 'Leechers'];\n        let html;\n        try{\n            html = await axios.get(element);\n        }catch{\n            return null;\n        }\n        const $ = cheerio.load(html.data);\n        data.Name = $('.box-info-heading h1').text().trim();\n        data.Magnet = $('.clearfix ul li a').attr('href') || \"\";\n        const poster = $('div.torrent-image img').attr('src');\n        \n        if (typeof poster !== 'undefined') {\n            if (poster.startsWith('http')){\n                data.Poster = poster;\n            }\n            else{\n                data.Poster = 'https:' + poster;\n            }\n        } else {\n            data.Poster = ''\n        }\n\n        $('div .clearfix ul li > span').each((i, element) => {\n            $list = $(element);\n            data[labels[i]] = $list.text();\n        })\n        data.Url = element\n\n        allTorrent.push(data)\n    }))\n\n    return allTorrent\n}\nmodule.exports = {\n    torrent1337x: torrent1337x\n}"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AAIN,eAAe,aAAa,QAAQ,EAAE,EAAE,OAAO,GAAG;IAE9C,MAAM,aAAa,EAAE;IACrB,IAAI;IACJ,MAAM,MAAM,8BAA8B,QAAQ,MAAM,OAAO;IAC/D,IAAG;QACC,OAAO,MAAM,MAAM,GAAG,CAAC;IAC3B,EAAC,OAAK;QACF,OAAO;IACX;IAEA,MAAM,IAAI,QAAQ,IAAI,CAAC,KAAK,IAAI;IAEhC,MAAM,QAAQ,EAAE,WAAW,GAAG,CAAC,CAAC,GAAG;QAC/B,IAAI,OAAO,sBAAsB,EAAE,SAAS,IAAI,CAAC,KAAK,IAAI,GAAG,IAAI,CAAC;QAClE,OAAO;IAEX,GAAG,GAAG;IAGN,MAAM,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,OAAO;QAE/B,MAAM,OAAO,CAAC;QACd,MAAM,SAAS;YAAC;YAAY;YAAQ;YAAY;YAAQ;YAAc;YAAa;YAAe;YAAgB;YAAW;SAAW;QACxI,IAAI;QACJ,IAAG;YACC,OAAO,MAAM,MAAM,GAAG,CAAC;QAC3B,EAAC,OAAK;YACF,OAAO;QACX;QACA,MAAM,IAAI,QAAQ,IAAI,CAAC,KAAK,IAAI;QAChC,KAAK,IAAI,GAAG,EAAE,wBAAwB,IAAI,GAAG,IAAI;QACjD,KAAK,MAAM,GAAG,EAAE,qBAAqB,IAAI,CAAC,WAAW;QACrD,MAAM,SAAS,EAAE,yBAAyB,IAAI,CAAC;QAE/C,IAAI,OAAO,WAAW,aAAa;YAC/B,IAAI,OAAO,UAAU,CAAC,SAAQ;gBAC1B,KAAK,MAAM,GAAG;YAClB,OACI;gBACA,KAAK,MAAM,GAAG,WAAW;YAC7B;QACJ,OAAO;YACH,KAAK,MAAM,GAAG;QAClB;QAEA,EAAE,8BAA8B,IAAI,CAAC,CAAC,GAAG;YACrC,QAAQ,EAAE;YACV,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,MAAM,IAAI;QAChC;QACA,KAAK,GAAG,GAAG;QAEX,WAAW,IAAI,CAAC;IACpB;IAEA,OAAO;AACX;AACA,OAAO,OAAO,GAAG;IACb,cAAc;AAClB","debugId":null}},
    {"offset": {"line": 421, "column": 0}, "map": {"version":3,"sources":["file:///home/noobhacker/Documents/Movies/piratebaye/next_app/app/api/all/%5Bslug%5D/torrent/nyaaSI.js"],"sourcesContent":["const cheerio = require('cheerio');\nconst axios = require('axios');\n\n\nasync function nyaaSI(query, page = '1') {\n    let torrents = [];\n    const url = 'https://nyaa.si/?f=0&c=0_0&q=' + query + '&p=' + page;\n    let html = null;\n    try {\n        html = await axios.get(url);\n    } catch {\n        return null;\n    }\n    const regex = /.comments/gi;\n    const nameRegex = /[a-zA-Z\\W].+/g;\n\n    const $ = cheerio.load(html.data);\n\n    $('tbody tr').each((_, element) => {\n\n        const data = {}\n\n        const $find = $(element);\n        $find.each((_, element) => {\n            const td = $(element).children('td');\n            data.Name = $(element).find('td[colspan=\"2\"] a').text().trim().match(nameRegex)[0];\n            data.Category = $(element).find('a').attr('title');\n            data.Url = ('https://nyaa.si' + $(element).find('td[colspan=\"2\"] a').attr('href')).replace(regex, '');\n\n            $find.each((_, element) => {\n                data.Size = $(td).eq(3).text();\n                data.DateUploaded = $(td).eq(4).text();\n                data.Seeders = $(td).eq(5).text();\n                data.Leechers = $(td).eq(6).text();\n                data.Downloads = $(td).eq(7).text();\n                data.Torrent = 'https://nyaa.si' + $(element).find('.text-center a').attr('href');\n                data.Magnet = $(element).find('.text-center a').next().attr('href')\n            })\n\n        });\n        torrents.push(data);\n\n    });\n\n    return torrents\n}\n\nmodule.exports = {\n    nyaaSI: nyaaSI\n}"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AAGN,eAAe,OAAO,KAAK,EAAE,OAAO,GAAG;IACnC,IAAI,WAAW,EAAE;IACjB,MAAM,MAAM,kCAAkC,QAAQ,QAAQ;IAC9D,IAAI,OAAO;IACX,IAAI;QACA,OAAO,MAAM,MAAM,GAAG,CAAC;IAC3B,EAAE,OAAM;QACJ,OAAO;IACX;IACA,MAAM,QAAQ;IACd,MAAM,YAAY;IAElB,MAAM,IAAI,QAAQ,IAAI,CAAC,KAAK,IAAI;IAEhC,EAAE,YAAY,IAAI,CAAC,CAAC,GAAG;QAEnB,MAAM,OAAO,CAAC;QAEd,MAAM,QAAQ,EAAE;QAChB,MAAM,IAAI,CAAC,CAAC,GAAG;YACX,MAAM,KAAK,EAAE,SAAS,QAAQ,CAAC;YAC/B,KAAK,IAAI,GAAG,EAAE,SAAS,IAAI,CAAC,qBAAqB,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,UAAU,CAAC,EAAE;YAClF,KAAK,QAAQ,GAAG,EAAE,SAAS,IAAI,CAAC,KAAK,IAAI,CAAC;YAC1C,KAAK,GAAG,GAAG,CAAC,oBAAoB,EAAE,SAAS,IAAI,CAAC,qBAAqB,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO;YAElG,MAAM,IAAI,CAAC,CAAC,GAAG;gBACX,KAAK,IAAI,GAAG,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI;gBAC5B,KAAK,YAAY,GAAG,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI;gBACpC,KAAK,OAAO,GAAG,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI;gBAC/B,KAAK,QAAQ,GAAG,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI;gBAChC,KAAK,SAAS,GAAG,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI;gBACjC,KAAK,OAAO,GAAG,oBAAoB,EAAE,SAAS,IAAI,CAAC,kBAAkB,IAAI,CAAC;gBAC1E,KAAK,MAAM,GAAG,EAAE,SAAS,IAAI,CAAC,kBAAkB,IAAI,GAAG,IAAI,CAAC;YAChE;QAEJ;QACA,SAAS,IAAI,CAAC;IAElB;IAEA,OAAO;AACX;AAEA,OAAO,OAAO,GAAG;IACb,QAAQ;AACZ","debugId":null}},
    {"offset": {"line": 465, "column": 0}, "map": {"version":3,"sources":["file:///home/noobhacker/Documents/Movies/piratebaye/next_app/app/api/all/%5Bslug%5D/torrent/yts.js"],"sourcesContent":["const cheerio = require('cheerio');\nconst axios = require('axios');\n\n\n\nasync function yts(query, page = '1') {\n\n    let all = []\n    let ALLURL = [];\n    if (page === '' || page === '1') {\n        var url = \"https://yts.mx/browse-movies/\" + query + \"/all/all/0/latest/0/all\"\n    } else {\n        var url = \"https://yts.mx/browse-movies/\" + query + \"/all/all/0/latest/0/all?page=\" + page;\n    }\n    let html;\n    try {\n        html = await axios.get(url, headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.106 Safari/537.36\"\n        });\n    } catch {\n        return null;\n    }\n\n    const $ = cheerio.load(html.data);\n    $('div.browse-movie-bottom').each((_, element) => {\n        let url = $(element).find('a').attr('href');\n        ALLURL.push(url);\n    })\n\n    await Promise.all(ALLURL.map(async (url) => {\n        const data = {\n            'Name': null,\n            'ReleasedDate': null,\n            'Genre': null,\n            'Rating': null,\n            'Likes': null,\n            'Runtime': null,\n            'Language': null,\n            'Url': null,\n            'Poster': null,\n            'Files': []\n        };\n        let html;\n        try {\n            html = await axios.get(url);\n        } catch {\n            return;\n        }\n\n        const $ = cheerio.load(html.data);\n\n        data['Name'] = $('div.hidden-xs').find('h1').text();\n        data['ReleasedDate'] = $('div.hidden-xs').find('h2').eq(0).text();\n        data['Genre'] = $('div.hidden-xs').find('h2').eq(1).text();\n        data['Rating'] = (($('div.bottom-info div.rating-row').eq(3).find('span').eq(0).text()) + ' ⭐').trim() || 'Not Rated'\n        data['Likes'] = $('div.bottom-info div.rating-row').eq(0).find('span').eq(1).text()\n        data['Runtime'] = $('div .tech-spec-info').find('div .row').eq(1).find('div .tech-spec-element').eq(2).text().trim();\n        data['Language'] = $('div .tech-spec-info').find('div .row').eq(0).find('div .tech-spec-element').eq(2).text().trim();\n        data['Url'] = url;\n        data['Poster'] = $('div #movie-poster').eq(0).find('img').attr('src');\n\n        $('.modal-download > div:nth-child(1) div.modal-content').each((i, el) => {\n            $('div.modal-torrent').each((_, ele) => {\n                let files = {};\n                files.Quality = $(ele).find(':nth-child(1) >span').text();;\n                files.Type = $(ele).find(':nth-child(2)').text();\n                files.Size = $(ele).find(':nth-child(5)').text();\n                files.Torrent = $(ele).find(':nth-child(6)').attr('href');\n                files.Magnet = $(ele).find(':nth-child(7)').attr('href');\n\n                data.Files.push(files);\n            })\n\n\n        })\n        all.push(data);\n    }))\n\n    return all;\n\n\n\n}\n\n\nmodule.exports = {\n    yts: yts\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 541, "column": 0}, "map": {"version":3,"sources":["file:///home/noobhacker/Documents/Movies/piratebaye/next_app/app/api/all/%5Bslug%5D/torrent/pirateBay.js"],"sourcesContent":["const cheerio = require('cheerio')\nconst axios = require('axios')\n\nasync function pirateBay(query, page = '1') {\n\n    const allTorrents = [];\n    const url = 'https://thehiddenbay.com/search/' + query + '/' + page + '/99/0';\n    let html;\n    try {\n        html = await axios.get(url);\n    } catch {\n        return null;\n    }\n    const $ = cheerio.load(html.data)\n\n    $(\"table#searchResult tr\").each((_, element) => {\n        const data = $(element).find('font.detDesc').text().replace(/(Size|Uploaded)/gi, '').replace(/ULed/gi, 'Uploaded').split(',').map(value => value.trim());\n        const date = data[0]\n        const size = data[1]\n        const uploader = $(element).find('font.detDesc a').text()\n\n        const torrent = {\n            Name: $(element).find('a.detLink').text(),\n            Size: size,\n            DateUploaded: date,\n            Category: $(element).find('td.vertTh center a').eq(0).text(),\n            Seeders: $(element).find('td').eq(2).text(),\n            Leechers: $(element).find('td').eq(3).text(),\n            UploadedBy: uploader,\n            Url: $(element).find('a.detLink').attr('href'),\n            Magnet: $(element).find(\"td div.detName\").next().attr('href')\n        }\n\n        if (torrent.Name.length) {\n            allTorrents.push(torrent)\n        }\n    })\n\n    return allTorrents\n}\n\nmodule.exports ={\n    pirateBay : pirateBay\n}"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AAEN,eAAe,UAAU,KAAK,EAAE,OAAO,GAAG;IAEtC,MAAM,cAAc,EAAE;IACtB,MAAM,MAAM,qCAAqC,QAAQ,MAAM,OAAO;IACtE,IAAI;IACJ,IAAI;QACA,OAAO,MAAM,MAAM,GAAG,CAAC;IAC3B,EAAE,OAAM;QACJ,OAAO;IACX;IACA,MAAM,IAAI,QAAQ,IAAI,CAAC,KAAK,IAAI;IAEhC,EAAE,yBAAyB,IAAI,CAAC,CAAC,GAAG;QAChC,MAAM,OAAO,EAAE,SAAS,IAAI,CAAC,gBAAgB,IAAI,GAAG,OAAO,CAAC,qBAAqB,IAAI,OAAO,CAAC,UAAU,YAAY,KAAK,CAAC,KAAK,GAAG,CAAC,CAAA,QAAS,MAAM,IAAI;QACrJ,MAAM,OAAO,IAAI,CAAC,EAAE;QACpB,MAAM,OAAO,IAAI,CAAC,EAAE;QACpB,MAAM,WAAW,EAAE,SAAS,IAAI,CAAC,kBAAkB,IAAI;QAEvD,MAAM,UAAU;YACZ,MAAM,EAAE,SAAS,IAAI,CAAC,aAAa,IAAI;YACvC,MAAM;YACN,cAAc;YACd,UAAU,EAAE,SAAS,IAAI,CAAC,sBAAsB,EAAE,CAAC,GAAG,IAAI;YAC1D,SAAS,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI;YACzC,UAAU,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI;YAC1C,YAAY;YACZ,KAAK,EAAE,SAAS,IAAI,CAAC,aAAa,IAAI,CAAC;YACvC,QAAQ,EAAE,SAAS,IAAI,CAAC,kBAAkB,IAAI,GAAG,IAAI,CAAC;QAC1D;QAEA,IAAI,QAAQ,IAAI,CAAC,MAAM,EAAE;YACrB,YAAY,IAAI,CAAC;QACrB;IACJ;IAEA,OAAO;AACX;AAEA,OAAO,OAAO,GAAE;IACZ,WAAY;AAChB","debugId":null}},
    {"offset": {"line": 583, "column": 0}, "map": {"version":3,"sources":["file:///home/noobhacker/Documents/Movies/piratebaye/next_app/app/api/all/%5Bslug%5D/torrent/torLock.js"],"sourcesContent":["const cheerio = require('cheerio');\nconst axios = require('axios');\n\nasync function torLock(query = '', page = '1') {\n\n    const ALLTORRENT = [];\n    const ALLURL =[]\n    const url = encodeURI('https://www.torlock.com/all/torrents/' + query + '/' + page + '.html');\n    let html;\n    try {\n        html = await axios.get(url);\n    } catch (error) {\n        return null;\n    }\n\n    const $ = cheerio.load(html.data)\n\n    $('.table tbody tr').each((i, element) => {\n\n        if (i > 3) {\n            let url = \"https://www.torlock.com\" + $(element).find('td').eq(0).find('div a').attr('href');\n            ALLURL.push(url);\n            let torrent = {\n                'Name': $(element).find('td').eq(0).find('div a b').text().trim(),\n                'Size': $(element).find('td').eq(2).text().trim(),\n                'DateUploaded': $(element).find('td').eq(1).text().trim(),\n                'Seeders': $(element).find('td').eq(3).text().trim(),\n                'Leechers': $(element).find('td').eq(4).text().trim(),\n                'Url': url\n            }\n            if (torrent.Name !== '') {\n                ALLTORRENT.push(torrent);\n            }\n        }\n    })\n\n    await Promise.all(ALLURL.map(async url => {\n        for (let i = 0; i < ALLTORRENT.length; i++) {\n            if (ALLTORRENT[i]['Url'] === url) {\n                let html;\n                try {\n                    html = await axios.get(url, headers = {\n                        \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.106 Safari/537.36\"\n                    });\n                } catch {\n                    return;\n                }\n                const $ = cheerio.load(html.data);\n                ALLTORRENT[i].Torrent = $(\"body > article > div:nth-child(6) > div > div:nth-child(2) > a\").attr('href') || \"\";\n                ALLTORRENT[i].Magnet = $('body > article > table:nth-child(5) > thead > tr > th > div:nth-child(2) > h4 > a:nth-child(1)').attr('href');\n\n            }\n        }\n\n    }))\n\n    return ALLTORRENT;\n}\n\n\nmodule.exports = {\n    torLock: torLock\n}"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AAEN,eAAe,QAAQ,QAAQ,EAAE,EAAE,OAAO,GAAG;IAEzC,MAAM,aAAa,EAAE;IACrB,MAAM,SAAQ,EAAE;IAChB,MAAM,MAAM,UAAU,0CAA0C,QAAQ,MAAM,OAAO;IACrF,IAAI;IACJ,IAAI;QACA,OAAO,MAAM,MAAM,GAAG,CAAC;IAC3B,EAAE,OAAO,OAAO;QACZ,OAAO;IACX;IAEA,MAAM,IAAI,QAAQ,IAAI,CAAC,KAAK,IAAI;IAEhC,EAAE,mBAAmB,IAAI,CAAC,CAAC,GAAG;QAE1B,IAAI,IAAI,GAAG;YACP,IAAI,MAAM,4BAA4B,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,IAAI,CAAC;YACrF,OAAO,IAAI,CAAC;YACZ,IAAI,UAAU;gBACV,QAAQ,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,GAAG,IAAI;gBAC/D,QAAQ,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI;gBAC/C,gBAAgB,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI;gBACvD,WAAW,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI;gBAClD,YAAY,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI;gBACnD,OAAO;YACX;YACA,IAAI,QAAQ,IAAI,KAAK,IAAI;gBACrB,WAAW,IAAI,CAAC;YACpB;QACJ;IACJ;IAEA,MAAM,QAAQ,GAAG,CAAC,OAAO,GAAG,CAAC,OAAM;QAC/B,IAAK,IAAI,IAAI,GAAG,IAAI,WAAW,MAAM,EAAE,IAAK;YACxC,IAAI,UAAU,CAAC,EAAE,CAAC,MAAM,KAAK,KAAK;gBAC9B,IAAI;gBACJ,IAAI;oBACA,OAAO,MAAM,MAAM,GAAG,CAAC,KAAK,UAAU;wBAClC,cAAc;oBAClB;gBACJ,EAAE,OAAM;oBACJ;gBACJ;gBACA,MAAM,IAAI,QAAQ,IAAI,CAAC,KAAK,IAAI;gBAChC,UAAU,CAAC,EAAE,CAAC,OAAO,GAAG,EAAE,kEAAkE,IAAI,CAAC,WAAW;gBAC5G,UAAU,CAAC,EAAE,CAAC,MAAM,GAAG,EAAE,kGAAkG,IAAI,CAAC;YAEpI;QACJ;IAEJ;IAEA,OAAO;AACX;AAGA,OAAO,OAAO,GAAG;IACb,SAAS;AACb","debugId":null}},
    {"offset": {"line": 640, "column": 0}, "map": {"version":3,"sources":["file:///home/noobhacker/Documents/Movies/piratebaye/next_app/app/api/all/%5Bslug%5D/torrent/ezTV.js"],"sourcesContent":["const cheerio = require('cheerio');\nconst axios = require('axios');\n\n\nasync function ezTV(query) {\n    let allTorrents = [];\n    const url = 'https://eztv.re/search/' + query;\n    let html;\n    try {\n        html = await axios.get(url);\n    } catch{\n        return null;\n    }\n\n    const $ = cheerio.load(html.data)\n\n    $('tbody tr').each((_, element) => {\n\n        const url = $(element).find('td').eq(1).find('a').attr('href') || ''\n        const name = $(element).find('td').eq(1).find('a').text() || ''\n        if (url !== '' || name !== '') {\n            if (!name.match((new RegExp(query.replace(/(\\W|\\s)/ig, '(\\\\W|\\\\s|).?'), 'ig')))) return;\n            let torrent = {\n                'Name': name,\n                'Size': $(element).find('td').eq(3).text(),\n                'DateUploaded': $(element).find('td').eq(4).text(),\n                'Seeders': $(element).find('td').eq(5).text() || '',\n                'Url': \"https://eztv.io\" + url,\n                'Torrent': $(element).find('td').eq(2).find('a').eq(1).attr('href'),\n                'Magnet': $(element).find('td').eq(2).find('a').attr('href')\n            }\n            allTorrents.push(torrent)\n        }\n    })\n\n    return allTorrents\n}\n\nmodule.exports = {\n    ezTV: ezTV\n}\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AAGN,eAAe,KAAK,KAAK;IACrB,IAAI,cAAc,EAAE;IACpB,MAAM,MAAM,4BAA4B;IACxC,IAAI;IACJ,IAAI;QACA,OAAO,MAAM,MAAM,GAAG,CAAC;IAC3B,EAAE,OAAK;QACH,OAAO;IACX;IAEA,MAAM,IAAI,QAAQ,IAAI,CAAC,KAAK,IAAI;IAEhC,EAAE,YAAY,IAAI,CAAC,CAAC,GAAG;QAEnB,MAAM,MAAM,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,WAAW;QAClE,MAAM,OAAO,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,MAAM;QAC7D,IAAI,QAAQ,MAAM,SAAS,IAAI;YAC3B,IAAI,CAAC,KAAK,KAAK,CAAE,IAAI,OAAO,MAAM,OAAO,CAAC,aAAa,iBAAiB,QAAS;YACjF,IAAI,UAAU;gBACV,QAAQ;gBACR,QAAQ,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI;gBACxC,gBAAgB,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI;gBAChD,WAAW,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,MAAM;gBACjD,OAAO,oBAAoB;gBAC3B,WAAW,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC;gBAC5D,UAAU,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC;YACzD;YACA,YAAY,IAAI,CAAC;QACrB;IACJ;IAEA,OAAO;AACX;AAEA,OAAO,OAAO,GAAG;IACb,MAAM;AACV","debugId":null}},
    {"offset": {"line": 679, "column": 0}, "map": {"version":3,"sources":["file:///home/noobhacker/Documents/Movies/piratebaye/next_app/app/api/all/%5Bslug%5D/torrent/torrentGalaxy.js"],"sourcesContent":["const cheerio = require('cheerio');\nconst axios = require('axios');\n\nasync function torrentGalaxy(query = '', page = '0') {\n\n    if(page !== '0'){\n        try{\n            page = Number(page) - 1;\n        }catch{\n            //\n        }\n    }\n    const allTorrents = [];\n    const url = \"https://torrentgalaxy.to/torrents.php?search=\" + query + \"&sort=id&order=desc&page=\" + page;\n    let html;\n    try{\n        html = await axios.get(url);\n    }catch{\n        return null;\n    }\n    \n    const $ = cheerio.load(html.data);\n\n    $('div.tgxtablerow.txlight').each((i, element) => {\n        const data = {};\n        const posterRegex = /\\bhttps?:[^)''\"]+\\.(?:jpg|jpeg|gif|png)(?![a-z])/g;\n        data.Name = $(element).find(\":nth-child(4) div a b\").text();\n        try {\n            data.Poster = ($(element).attr('onmouseover')).match(posterRegex)[0];\n        } catch {\n            data.Poster = \"\";\n        }\n        data.Category = $(element).find(\":nth-child(1) a small\").text();\n        data.Url = \"https://torrentgalaxy.to\" + $(element).find(\"a.txlight\").attr('href');\n        data.UploadedBy = $(element).find(':nth-child(7) span a span').text();\n        data.Size = $(element).find(':nth-child(8)').text();\n        data.Seeders = $(element).find(':nth-child(11) span font:nth-child(1)').text();\n        data.Leechers = $(element).find(':nth-child(11) span font:nth-child(2)').text();\n        data.DateUploaded = $(element).find(\":nth-child(12)\").text();\n        data.Torrent = $(element).find(\".tgxtablecell.collapsehide.rounded.txlight a\").attr(\"href\");\n        data.Magnet = $(element).find(\".tgxtablecell.collapsehide.rounded.txlight a\").next().attr(\"href\");\n        allTorrents.push(data);\n    })\n    return allTorrents;\n}\nmodule.exports = torrentGalaxy"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AAEN,eAAe,cAAc,QAAQ,EAAE,EAAE,OAAO,GAAG;IAE/C,IAAG,SAAS,KAAI;QACZ,IAAG;YACC,OAAO,OAAO,QAAQ;QAC1B,EAAC,OAAK;QACF,EAAE;QACN;IACJ;IACA,MAAM,cAAc,EAAE;IACtB,MAAM,MAAM,kDAAkD,QAAQ,8BAA8B;IACpG,IAAI;IACJ,IAAG;QACC,OAAO,MAAM,MAAM,GAAG,CAAC;IAC3B,EAAC,OAAK;QACF,OAAO;IACX;IAEA,MAAM,IAAI,QAAQ,IAAI,CAAC,KAAK,IAAI;IAEhC,EAAE,2BAA2B,IAAI,CAAC,CAAC,GAAG;QAClC,MAAM,OAAO,CAAC;QACd,MAAM,cAAc;QACpB,KAAK,IAAI,GAAG,EAAE,SAAS,IAAI,CAAC,yBAAyB,IAAI;QACzD,IAAI;YACA,KAAK,MAAM,GAAG,AAAC,EAAE,SAAS,IAAI,CAAC,eAAgB,KAAK,CAAC,YAAY,CAAC,EAAE;QACxE,EAAE,OAAM;YACJ,KAAK,MAAM,GAAG;QAClB;QACA,KAAK,QAAQ,GAAG,EAAE,SAAS,IAAI,CAAC,yBAAyB,IAAI;QAC7D,KAAK,GAAG,GAAG,6BAA6B,EAAE,SAAS,IAAI,CAAC,aAAa,IAAI,CAAC;QAC1E,KAAK,UAAU,GAAG,EAAE,SAAS,IAAI,CAAC,6BAA6B,IAAI;QACnE,KAAK,IAAI,GAAG,EAAE,SAAS,IAAI,CAAC,iBAAiB,IAAI;QACjD,KAAK,OAAO,GAAG,EAAE,SAAS,IAAI,CAAC,yCAAyC,IAAI;QAC5E,KAAK,QAAQ,GAAG,EAAE,SAAS,IAAI,CAAC,yCAAyC,IAAI;QAC7E,KAAK,YAAY,GAAG,EAAE,SAAS,IAAI,CAAC,kBAAkB,IAAI;QAC1D,KAAK,OAAO,GAAG,EAAE,SAAS,IAAI,CAAC,gDAAgD,IAAI,CAAC;QACpF,KAAK,MAAM,GAAG,EAAE,SAAS,IAAI,CAAC,gDAAgD,IAAI,GAAG,IAAI,CAAC;QAC1F,YAAY,IAAI,CAAC;IACrB;IACA,OAAO;AACX;AACA,OAAO,OAAO,GAAG","debugId":null}},
    {"offset": {"line": 726, "column": 0}, "map": {"version":3,"sources":["file:///home/noobhacker/Documents/Movies/piratebaye/next_app/app/api/all/%5Bslug%5D/torrent/rarbg.js"],"sourcesContent":["const cheerio = require('cheerio')\nconst axios = require('axios')\n\n\nasync function rarbg(query, page = '1') {\n    const ALLURLARRAY = [];\n    var ALLTORRENT = [];\n    const url = \"https://rargb.to/search/\" + page + \"/?search=\" + query;\n    let html;\n    try {\n        html = await axios.get(url, headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.106 Safari/537.36\"\n        });\n\n    } catch {\n        return null;\n    }\n\n    const $ = cheerio.load(html.data);\n\n    $('table.lista2t tbody').each((_, element) => {\n        $('tr.lista2').each((_, el) => {\n            const data = {};\n            const td = $(el).children('td');\n            data.Name = $(td).eq(1).find('a').attr('title');\n            data.Category = $(td).eq(2).find('a').text();\n            data.DateUploaded = $(td).eq(3).text();\n            data.Size = $(td).eq(4).text();\n            data.Seeders = $(td).eq(5).find('font').text();\n            data.Leechers = $(td).eq(6).text();\n            data.UploadedBy = $(td).eq(7).text();\n            data.Url = \"https://rargb.to\" + $(td).eq(1).find('a').attr('href');\n            ALLURLARRAY.push(data.Url);\n            ALLTORRENT.push(data);\n\n        })\n    });\n\n    await Promise.all(ALLURLARRAY.map(async (url) => {\n        for (let i = 0; i < ALLTORRENT.length; i++) {\n            if (ALLTORRENT[i]['Url'] === url) {\n                let html;\n                try{\n                    html = await axios.get(url, headers = {\n                        \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.106 Safari/537.36\"\n                    });\n                }catch{\n                    return null;\n                }\n                \n                let $ = cheerio.load(html.data);\n\n                let poster = \"https://rargb.to\" + $(\"tr:nth-child(4) > td:nth-child(2) > img:nth-child(1)\").attr('src') || \"\";\n                if (!poster.endsWith('undefined')) {\n                    ALLTORRENT[i].Poster = poster;\n                } else {\n                    ALLTORRENT[i].Poster = \"\";\n                }\n                ALLTORRENT[i].Magnet = $(\"tr:nth-child(1) > td:nth-child(2) > a:nth-child(3)\").attr('href');\n            }\n        }\n\n    }))\n    return ALLTORRENT;\n}\nmodule.exports = rarbg;"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AAGN,eAAe,MAAM,KAAK,EAAE,OAAO,GAAG;IAClC,MAAM,cAAc,EAAE;IACtB,IAAI,aAAa,EAAE;IACnB,MAAM,MAAM,6BAA6B,OAAO,cAAc;IAC9D,IAAI;IACJ,IAAI;QACA,OAAO,MAAM,MAAM,GAAG,CAAC,KAAK,UAAU;YAClC,cAAc;QAClB;IAEJ,EAAE,OAAM;QACJ,OAAO;IACX;IAEA,MAAM,IAAI,QAAQ,IAAI,CAAC,KAAK,IAAI;IAEhC,EAAE,uBAAuB,IAAI,CAAC,CAAC,GAAG;QAC9B,EAAE,aAAa,IAAI,CAAC,CAAC,GAAG;YACpB,MAAM,OAAO,CAAC;YACd,MAAM,KAAK,EAAE,IAAI,QAAQ,CAAC;YAC1B,KAAK,IAAI,GAAG,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC;YACvC,KAAK,QAAQ,GAAG,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI;YAC1C,KAAK,YAAY,GAAG,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI;YACpC,KAAK,IAAI,GAAG,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI;YAC5B,KAAK,OAAO,GAAG,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,IAAI;YAC5C,KAAK,QAAQ,GAAG,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI;YAChC,KAAK,UAAU,GAAG,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI;YAClC,KAAK,GAAG,GAAG,qBAAqB,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC;YAC3D,YAAY,IAAI,CAAC,KAAK,GAAG;YACzB,WAAW,IAAI,CAAC;QAEpB;IACJ;IAEA,MAAM,QAAQ,GAAG,CAAC,YAAY,GAAG,CAAC,OAAO;QACrC,IAAK,IAAI,IAAI,GAAG,IAAI,WAAW,MAAM,EAAE,IAAK;YACxC,IAAI,UAAU,CAAC,EAAE,CAAC,MAAM,KAAK,KAAK;gBAC9B,IAAI;gBACJ,IAAG;oBACC,OAAO,MAAM,MAAM,GAAG,CAAC,KAAK,UAAU;wBAClC,cAAc;oBAClB;gBACJ,EAAC,OAAK;oBACF,OAAO;gBACX;gBAEA,IAAI,IAAI,QAAQ,IAAI,CAAC,KAAK,IAAI;gBAE9B,IAAI,SAAS,qBAAqB,EAAE,wDAAwD,IAAI,CAAC,UAAU;gBAC3G,IAAI,CAAC,OAAO,QAAQ,CAAC,cAAc;oBAC/B,UAAU,CAAC,EAAE,CAAC,MAAM,GAAG;gBAC3B,OAAO;oBACH,UAAU,CAAC,EAAE,CAAC,MAAM,GAAG;gBAC3B;gBACA,UAAU,CAAC,EAAE,CAAC,MAAM,GAAG,EAAE,sDAAsD,IAAI,CAAC;YACxF;QACJ;IAEJ;IACA,OAAO;AACX;AACA,OAAO,OAAO,GAAG","debugId":null}},
    {"offset": {"line": 835, "column": 0}, "map": {"version":3,"sources":["file:///home/noobhacker/Documents/Movies/piratebaye/next_app/app/api/all/%5Bslug%5D/torrent/ettv.js"],"sourcesContent":["const cheerio = require('cheerio');\nconst axios = require('axios');\nconst dev = require('request-promise');\n\nasync function ettvCentral(query, page = '0') {\n    const ALLURLARRAY = [];\n    var ALLTORRENT = [];\n    const url = \"https://www.ettvcentral.com/torrents-search.php?search= \" + query + \"&page=\" + page;\n    let html;\n    try {\n        html = await dev({\n            url: url,\n            // proxy: 'Enter your proxy uri here'\n        })\n\n    } catch {\n        return null;\n    }\n\n    const $ = cheerio.load(html);\n    $('table tbody').each((_, element) => {\n        $('tr').each((_, el) => {\n            const data = {};\n            const td = $(el).children('td');\n            data.Name = $(td).eq(1).find('a b').text();\n            data.Category = $(td).eq(0).find('a img').attr('title');\n            data.DateUploaded = $(td).eq(2).text();\n            data.Size = $(td).eq(3).text();\n            data.Seeders = $(td).eq(5).text();\n            data.Leechers = $(td).eq(6).text();\n            data.UploadedBy = $(td).eq(7).text();\n            data.Url = \"https://www.ettvcentral.com\" + $(td).eq(1).find('a').attr('href');\n            if (data.Name !== \"\") {\n                ALLURLARRAY.push(data.Url);\n                ALLTORRENT.push(data);\n            }\n        })\n    })\n    await Promise.all(ALLURLARRAY.map(async (url) => {\n        for (let i = 0; i < ALLTORRENT.length; i++) {\n            if (ALLTORRENT[i]['Url'] === url) {\n                let html;\n                try {\n                    html = await dev({\n                        url: url,\n                        // proxy: 'Enter your proxy uri here',\n                    })\n                } catch {\n                    return null;\n                }\n                let $ = cheerio.load(html);\n                let poster = '';\n                try {\n                    poster = $('div .torrent_data').find('center img').attr('src');\n                } catch {\n                    //\n                }\n                ALLTORRENT[i].Poster = poster;\n                ALLTORRENT[i].Magnet = $(\"#downloadbox > table > tbody > tr > td:nth-child(1) > a\").attr('href');\n\n            }\n        }\n    }))\n\n    return ALLTORRENT;\n}\n\nmodule.exports = ettvCentral"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AACN,MAAM;AAEN,eAAe,YAAY,KAAK,EAAE,OAAO,GAAG;IACxC,MAAM,cAAc,EAAE;IACtB,IAAI,aAAa,EAAE;IACnB,MAAM,MAAM,6DAA6D,QAAQ,WAAW;IAC5F,IAAI;IACJ,IAAI;QACA,OAAO,MAAM,IAAI;YACb,KAAK;QAET;IAEJ,EAAE,OAAM;QACJ,OAAO;IACX;IAEA,MAAM,IAAI,QAAQ,IAAI,CAAC;IACvB,EAAE,eAAe,IAAI,CAAC,CAAC,GAAG;QACtB,EAAE,MAAM,IAAI,CAAC,CAAC,GAAG;YACb,MAAM,OAAO,CAAC;YACd,MAAM,KAAK,EAAE,IAAI,QAAQ,CAAC;YAC1B,KAAK,IAAI,GAAG,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI;YACxC,KAAK,QAAQ,GAAG,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,IAAI,CAAC;YAC/C,KAAK,YAAY,GAAG,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI;YACpC,KAAK,IAAI,GAAG,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI;YAC5B,KAAK,OAAO,GAAG,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI;YAC/B,KAAK,QAAQ,GAAG,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI;YAChC,KAAK,UAAU,GAAG,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI;YAClC,KAAK,GAAG,GAAG,gCAAgC,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC;YACtE,IAAI,KAAK,IAAI,KAAK,IAAI;gBAClB,YAAY,IAAI,CAAC,KAAK,GAAG;gBACzB,WAAW,IAAI,CAAC;YACpB;QACJ;IACJ;IACA,MAAM,QAAQ,GAAG,CAAC,YAAY,GAAG,CAAC,OAAO;QACrC,IAAK,IAAI,IAAI,GAAG,IAAI,WAAW,MAAM,EAAE,IAAK;YACxC,IAAI,UAAU,CAAC,EAAE,CAAC,MAAM,KAAK,KAAK;gBAC9B,IAAI;gBACJ,IAAI;oBACA,OAAO,MAAM,IAAI;wBACb,KAAK;oBAET;gBACJ,EAAE,OAAM;oBACJ,OAAO;gBACX;gBACA,IAAI,IAAI,QAAQ,IAAI,CAAC;gBACrB,IAAI,SAAS;gBACb,IAAI;oBACA,SAAS,EAAE,qBAAqB,IAAI,CAAC,cAAc,IAAI,CAAC;gBAC5D,EAAE,OAAM;gBACJ,EAAE;gBACN;gBACA,UAAU,CAAC,EAAE,CAAC,MAAM,GAAG;gBACvB,UAAU,CAAC,EAAE,CAAC,MAAM,GAAG,EAAE,2DAA2D,IAAI,CAAC;YAE7F;QACJ;IACJ;IAEA,OAAO;AACX;AAEA,OAAO,OAAO,GAAG","debugId":null}},
    {"offset": {"line": 900, "column": 0}, "map": {"version":3,"sources":["file:///home/noobhacker/Documents/Movies/piratebaye/next_app/app/api/all/%5Bslug%5D/torrent/zooqle.js"],"sourcesContent":["const cheerio = require('cheerio')\nconst axios = require('axios')\n\n\nasync function zooqle(query = '', page = '1') {\n    var ALLTORRENT = [];\n    const url = \"https://zooqle.com/search?pg=\" + page + \"&q=\" + query;\n    let html;\n    try {\n        html = await axios.get(url, headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.106 Safari/537.36\"\n        });\n\n    } catch {\n        return null;\n    }\n\n    const $ = cheerio.load(html.data);\n\n\n    $('tbody tr').each((_, element) => {\n        let seeders_leechers = $(element).find('td').eq(5).find('div').attr('title').trim().split('|');\n        let seeders = seeders_leechers[0].replace('Seeders:', '').trim();\n        let leechers = seeders_leechers[1].replace('Leechers:', '').trim();\n\n        let torrent = {\n            'Name': $(element).find('td').eq(1).find('a').text().trim(),\n            'Size': $(element).find('td').eq(3).find('div div').text().trim(),\n            'DateUploaded': $(element).find('td').eq(4).text().trim(),\n            'Seeders': seeders,\n            'Leechers': leechers,\n            'Url': \"https://zooqle.com\" + $(element).find('td').eq(1).find('a').attr('href'),\n            'Magnet': $(element).find('td').eq(2).find('ul').find('li').eq(1).find('a').attr('href')\n        }\n        ALLTORRENT.push(torrent);\n    })\n    return ALLTORRENT;\n}\n\nmodule.exports = {\n    zooqle: zooqle\n}"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AAGN,eAAe,OAAO,QAAQ,EAAE,EAAE,OAAO,GAAG;IACxC,IAAI,aAAa,EAAE;IACnB,MAAM,MAAM,kCAAkC,OAAO,QAAQ;IAC7D,IAAI;IACJ,IAAI;QACA,OAAO,MAAM,MAAM,GAAG,CAAC,KAAK,UAAU;YAClC,cAAc;QAClB;IAEJ,EAAE,OAAM;QACJ,OAAO;IACX;IAEA,MAAM,IAAI,QAAQ,IAAI,CAAC,KAAK,IAAI;IAGhC,EAAE,YAAY,IAAI,CAAC,CAAC,GAAG;QACnB,IAAI,mBAAmB,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,CAAC,SAAS,IAAI,GAAG,KAAK,CAAC;QAC1F,IAAI,UAAU,gBAAgB,CAAC,EAAE,CAAC,OAAO,CAAC,YAAY,IAAI,IAAI;QAC9D,IAAI,WAAW,gBAAgB,CAAC,EAAE,CAAC,OAAO,CAAC,aAAa,IAAI,IAAI;QAEhE,IAAI,UAAU;YACV,QAAQ,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,GAAG,IAAI;YACzD,QAAQ,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,GAAG,IAAI;YAC/D,gBAAgB,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI;YACvD,WAAW;YACX,YAAY;YACZ,OAAO,uBAAuB,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC;YACzE,UAAU,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC;QACrF;QACA,WAAW,IAAI,CAAC;IACpB;IACA,OAAO;AACX;AAEA,OAAO,OAAO,GAAG;IACb,QAAQ;AACZ","debugId":null}},
    {"offset": {"line": 939, "column": 0}, "map": {"version":3,"sources":["file:///home/noobhacker/Documents/Movies/piratebaye/next_app/app/api/all/%5Bslug%5D/torrent/kickAss.js"],"sourcesContent":["const cheerio = require('cheerio')\nconst axios = require('axios')\n\n\nasync function kickAss(query, page = '1') {\n    var ALLTORRENT = [];\n    let ALLURL = [];\n    const url = \"https://kickasstorrents.to/usearch/\" + query + \"/\" + page + \"/\";\n    let html;\n    try {\n        html = await axios.get(url, headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.106 Safari/537.36\"\n        });\n\n    } catch {\n        return null;\n    }\n\n    const $ = cheerio.load(html.data);\n\n    $('tbody tr').each((i, element) => {\n        if (i > 2) {\n            let url = \"https://kickasstorrents.to\" + $(element).find('a.cellMainLink').attr('href');\n            if (!url.endsWith('undefined')) {\n                ALLURL.push(url);\n                let torrent = {\n                    \"Name\": $(element).find('a.cellMainLink').text().trim(),\n                    \"Size\": $(element).find('td').eq(1).text().trim(),\n                    \"UploadedBy\": $(element).find('td').eq(2).text().trim(),\n                    \"Age\": $(element).find('td').eq(3).text().trim(),\n                    \"Seeders\": $(element).find('td').eq(4).text().trim(),\n                    \"Leechers\": $(element).find('td').eq(5).text().trim(),\n                    \"Url\": url\n                }\n                ALLTORRENT.push(torrent);\n            }\n        }\n\n    })\n\n    await Promise.all(ALLURL.map(async (url) => {\n        for (let i = 0; i < ALLTORRENT.length; i++) {\n            if (ALLTORRENT[i]['Url'] === url) {\n                let html;\n                try {\n                    html = await axios.get(url, headers = {\n                        \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.106 Safari/537.36\"\n                    });\n                } catch {\n                    return;\n                }\n                const $ = cheerio.load(html.data);\n                ALLTORRENT[i].Magnet = $('a.kaGiantButton').attr('href');\n\n            }\n        }\n    }))\n    return ALLTORRENT;\n}\nmodule.exports = kickAss;"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AAGN,eAAe,QAAQ,KAAK,EAAE,OAAO,GAAG;IACpC,IAAI,aAAa,EAAE;IACnB,IAAI,SAAS,EAAE;IACf,MAAM,MAAM,wCAAwC,QAAQ,MAAM,OAAO;IACzE,IAAI;IACJ,IAAI;QACA,OAAO,MAAM,MAAM,GAAG,CAAC,KAAK,UAAU;YAClC,cAAc;QAClB;IAEJ,EAAE,OAAM;QACJ,OAAO;IACX;IAEA,MAAM,IAAI,QAAQ,IAAI,CAAC,KAAK,IAAI;IAEhC,EAAE,YAAY,IAAI,CAAC,CAAC,GAAG;QACnB,IAAI,IAAI,GAAG;YACP,IAAI,MAAM,+BAA+B,EAAE,SAAS,IAAI,CAAC,kBAAkB,IAAI,CAAC;YAChF,IAAI,CAAC,IAAI,QAAQ,CAAC,cAAc;gBAC5B,OAAO,IAAI,CAAC;gBACZ,IAAI,UAAU;oBACV,QAAQ,EAAE,SAAS,IAAI,CAAC,kBAAkB,IAAI,GAAG,IAAI;oBACrD,QAAQ,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI;oBAC/C,cAAc,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI;oBACrD,OAAO,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI;oBAC9C,WAAW,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI;oBAClD,YAAY,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI;oBACnD,OAAO;gBACX;gBACA,WAAW,IAAI,CAAC;YACpB;QACJ;IAEJ;IAEA,MAAM,QAAQ,GAAG,CAAC,OAAO,GAAG,CAAC,OAAO;QAChC,IAAK,IAAI,IAAI,GAAG,IAAI,WAAW,MAAM,EAAE,IAAK;YACxC,IAAI,UAAU,CAAC,EAAE,CAAC,MAAM,KAAK,KAAK;gBAC9B,IAAI;gBACJ,IAAI;oBACA,OAAO,MAAM,MAAM,GAAG,CAAC,KAAK,UAAU;wBAClC,cAAc;oBAClB;gBACJ,EAAE,OAAM;oBACJ;gBACJ;gBACA,MAAM,IAAI,QAAQ,IAAI,CAAC,KAAK,IAAI;gBAChC,UAAU,CAAC,EAAE,CAAC,MAAM,GAAG,EAAE,mBAAmB,IAAI,CAAC;YAErD;QACJ;IACJ;IACA,OAAO;AACX;AACA,OAAO,OAAO,GAAG","debugId":null}},
    {"offset": {"line": 996, "column": 0}, "map": {"version":3,"sources":["file:///home/noobhacker/Documents/Movies/piratebaye/next_app/app/api/all/%5Bslug%5D/torrent/bitSearch.js"],"sourcesContent":["const cheerio = require(\"cheerio\");\nconst axios = require(\"axios\");\n\nasync function bitSearch(query, page = \"1\") {\n  var ALLTORRENT = [];\n  const url =\n    \"https://bitsearch.to/search?q=\" +\n    query +\n    \"&page=\" +\n    page +\n    \"&sort=seeders\";\n  let html;\n  try {\n    html = await axios.get(\n      url,\n      (headers = {\n        \"User-Agent\":\n          \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.106 Safari/537.36\",\n      })\n    );\n  } catch {\n    return null;\n  }\n\n  const $ = cheerio.load(html.data);\n\n  $(\"li.search-result.view-box\").each((_, element) => {\n    let size = $(element).find(\".info div div\").eq(2).text();\n    if (size) {\n      let torrent = {\n        Name: $(element).find(\".info h5 a\").text().trim(),\n        Size: $(element).find(\".info div div\").eq(2).text().trim(),\n        Downloads: $(element).find(\".info div div\").eq(1).text().trim(),\n        Seeders: $(element).find(\".info div div\").eq(3).text().trim(),\n        Leechers: $(element).find(\".info div div\").eq(4).text().trim(),\n        DateUploaded: $(element).find(\".info div div\").eq(5).text().trim(),\n        Url:\n          \"https://bitsearch.to\" + $(element).find(\".info h5 a\").attr(\"href\"),\n        TorrentLink: $(element).find(\".links a\").attr(\"href\"),\n        Magnet: $(element).find(\".links a\").next().attr(\"href\"),\n      };\n      ALLTORRENT.push(torrent);\n    }\n  });\n\n  return ALLTORRENT;\n}\n\nmodule.exports = bitSearch;\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AAEN,eAAe,UAAU,KAAK,EAAE,OAAO,GAAG;IACxC,IAAI,aAAa,EAAE;IACnB,MAAM,MACJ,mCACA,QACA,WACA,OACA;IACF,IAAI;IACJ,IAAI;QACF,OAAO,MAAM,MAAM,GAAG,CACpB,KACC,UAAU;YACT,cACE;QACJ;IAEJ,EAAE,OAAM;QACN,OAAO;IACT;IAEA,MAAM,IAAI,QAAQ,IAAI,CAAC,KAAK,IAAI;IAEhC,EAAE,6BAA6B,IAAI,CAAC,CAAC,GAAG;QACtC,IAAI,OAAO,EAAE,SAAS,IAAI,CAAC,iBAAiB,EAAE,CAAC,GAAG,IAAI;QACtD,IAAI,MAAM;YACR,IAAI,UAAU;gBACZ,MAAM,EAAE,SAAS,IAAI,CAAC,cAAc,IAAI,GAAG,IAAI;gBAC/C,MAAM,EAAE,SAAS,IAAI,CAAC,iBAAiB,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI;gBACxD,WAAW,EAAE,SAAS,IAAI,CAAC,iBAAiB,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI;gBAC7D,SAAS,EAAE,SAAS,IAAI,CAAC,iBAAiB,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI;gBAC3D,UAAU,EAAE,SAAS,IAAI,CAAC,iBAAiB,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI;gBAC5D,cAAc,EAAE,SAAS,IAAI,CAAC,iBAAiB,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI;gBAChE,KACE,yBAAyB,EAAE,SAAS,IAAI,CAAC,cAAc,IAAI,CAAC;gBAC9D,aAAa,EAAE,SAAS,IAAI,CAAC,YAAY,IAAI,CAAC;gBAC9C,QAAQ,EAAE,SAAS,IAAI,CAAC,YAAY,IAAI,GAAG,IAAI,CAAC;YAClD;YACA,WAAW,IAAI,CAAC;QAClB;IACF;IAEA,OAAO;AACT;AAEA,OAAO,OAAO,GAAG","debugId":null}},
    {"offset": {"line": 1035, "column": 0}, "map": {"version":3,"sources":["file:///home/noobhacker/Documents/Movies/piratebaye/next_app/app/api/all/%5Bslug%5D/torrent/gloTorrents.js"],"sourcesContent":["const cheerio = require('cheerio')\nconst axios = require('axios')\n\n\nasync function glodls(query, page = '0') {\n    var ALLTORRENT = [];\n    const url = `https://glodls.to/search_results.php?search=${query}&sort=seeders&order=desc&page=${page}`;\n    let html;\n    try {\n        html = await axios.get(url, headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.106 Safari/537.36\"\n        });\n\n    } catch {\n        return null;\n    }\n\n    const $ = cheerio.load(html.data);\n\n\n    $('.ttable_headinner tr').each((_, element) => {\n\n\n        let torrent = {\n            'Name': $(element).find('td').eq(1).find('a').text().trim(),\n            'Size': $(element).find('td').eq(4).text(),\n            'UploadedBy' : $(element).find('td').eq(7).find('a b font').text(),\n            'Seeders': $(element).find('td').eq(5).find('font b').text(),\n            'Leechers': $(element).find('td').eq(6).find('font b').text(),\n            'Url': \"https://glodls.to\" + $(element).find('td').eq(1).find('a').next().attr('href'),\n            'Torrent': \"https://glodls.to\" + $(element).find('td').eq(2).find('a').attr('href'),\n            'Magnet': $(element).find('td').eq(3).find('a').attr('href'),\n        }\n        if (torrent.Name !== '') {\n            ALLTORRENT.push(torrent);\n        }\n    })\n    return ALLTORRENT;\n}\nmodule.exports = glodls\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AAGN,eAAe,OAAO,KAAK,EAAE,OAAO,GAAG;IACnC,IAAI,aAAa,EAAE;IACnB,MAAM,MAAM,CAAC,4CAA4C,EAAE,MAAM,8BAA8B,EAAE,MAAM;IACvG,IAAI;IACJ,IAAI;QACA,OAAO,MAAM,MAAM,GAAG,CAAC,KAAK,UAAU;YAClC,cAAc;QAClB;IAEJ,EAAE,OAAM;QACJ,OAAO;IACX;IAEA,MAAM,IAAI,QAAQ,IAAI,CAAC,KAAK,IAAI;IAGhC,EAAE,wBAAwB,IAAI,CAAC,CAAC,GAAG;QAG/B,IAAI,UAAU;YACV,QAAQ,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,GAAG,IAAI;YACzD,QAAQ,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI;YACxC,cAAe,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,IAAI;YAChE,WAAW,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,IAAI;YAC1D,YAAY,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,IAAI;YAC3D,OAAO,sBAAsB,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,GAAG,IAAI,CAAC;YAC/E,WAAW,sBAAsB,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC;YAC5E,UAAU,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC;QACzD;QACA,IAAI,QAAQ,IAAI,KAAK,IAAI;YACrB,WAAW,IAAI,CAAC;QACpB;IACJ;IACA,OAAO;AACX;AACA,OAAO,OAAO,GAAG","debugId":null}},
    {"offset": {"line": 1072, "column": 0}, "map": {"version":3,"sources":["file:///home/noobhacker/Documents/Movies/piratebaye/next_app/app/api/all/%5Bslug%5D/torrent/magnet_dl.js"],"sourcesContent":["const cheerio = require('cheerio')\nconst axios = require('axios')\n\nasync function magnet_dl(query, page) {\n    var ALLTORRENT = [];\n    \n    if (page === '' || page === '1') {\n        var url = 'https://magnetdl.abcproxy.org/search/?q=' + query + '&m=1'\n    } else {\n        var url = 'https://magnetdl.proxyninja.org/search/?q=' + query + '&m=1'\n    }\n\n    let html;\n    try {\n        html = await axios.get(url, headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Linux; Android 12) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.87 Mobile Safari/537.36\"\n        });\n\n    } catch {\n        return null;\n    }\n\n    const $ = cheerio.load(html.data);\n\n    $('.download tbody tr').each((_, element) => {\n\n\n        let torrent = {\n            'Name': $(element).find('td').eq(1).find('a').text().trim(),\n            'Size': $(element).find('td').eq(5).text(),\n            'DateUploaded': $(element).find('td').eq(2).text(),\n            'Category': $(element).find('td').eq(3).text(),\n            'Seeders': $(element).find('td').eq(6).text(),\n            'Leechers': $(element).find('td').eq(7).text(),\n            'Url': \"https://www.magnetdl.com\" + $(element).find('td').eq(1).find('a').attr('href'),\n            'Magnet': $(element).find('td').eq(0).find('a').attr('href'),\n        }\n        if (torrent.Name !== '') {\n            ALLTORRENT.push(torrent);\n        }\n    })\n    return ALLTORRENT;\n}\n\nmodule.exports = magnet_dl\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AAEN,eAAe,UAAU,KAAK,EAAE,IAAI;IAChC,IAAI,aAAa,EAAE;IAEnB,IAAI,SAAS,MAAM,SAAS,KAAK;QAC7B,IAAI,MAAM,6CAA6C,QAAQ;IACnE,OAAO;QACH,IAAI,MAAM,+CAA+C,QAAQ;IACrE;IAEA,IAAI;IACJ,IAAI;QACA,OAAO,MAAM,MAAM,GAAG,CAAC,KAAK,UAAU;YAClC,cAAc;QAClB;IAEJ,EAAE,OAAM;QACJ,OAAO;IACX;IAEA,MAAM,IAAI,QAAQ,IAAI,CAAC,KAAK,IAAI;IAEhC,EAAE,sBAAsB,IAAI,CAAC,CAAC,GAAG;QAG7B,IAAI,UAAU;YACV,QAAQ,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,GAAG,IAAI;YACzD,QAAQ,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI;YACxC,gBAAgB,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI;YAChD,YAAY,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI;YAC5C,WAAW,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI;YAC3C,YAAY,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI;YAC5C,OAAO,6BAA6B,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC;YAC/E,UAAU,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC;QACzD;QACA,IAAI,QAAQ,IAAI,KAAK,IAAI;YACrB,WAAW,IAAI,CAAC;QACpB;IACJ;IACA,OAAO;AACX;AAEA,OAAO,OAAO,GAAG","debugId":null}},
    {"offset": {"line": 1113, "column": 0}, "map": {"version":3,"sources":["file:///home/noobhacker/Documents/Movies/piratebaye/next_app/app/api/all/%5Bslug%5D/torrent/limeTorrent.js"],"sourcesContent":["const cheerio = require('cheerio')\nconst axios = require('axios')\n\n\nasync function limeTorrent(query, page = '1') {\n    var ALLTORRENT = [];\n    const url = `https://www.limetorrents.pro/search/all/${query}/seeds/${page}/`;\n    let html;\n    try {\n        html = await axios.get(url, headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.106 Safari/537.36\"\n        });\n\n    } catch {\n        return null;\n    }\n\n    const $ = cheerio.load(html.data);\n\n    $('.table2 tbody tr').each((i, element) => {\n        if (i > 0) {\n            let category_and_age = $(element).find('td').eq(1).text().trim();\n            category_and_age = category_and_age.split('-');\n            let age = category_and_age[0].trim();\n            let category = category_and_age[1].replace('in', '').trim();\n            let torrent = {\n                \"Name\": $(element).find('div.tt-name').text().trim(),\n                \"Size\": $(element).find('td').eq(2).text().trim(),\n                \"Category\": category,\n                \"Age\": age,\n                \"Seeders\": $(element).find('td').eq(3).text().trim(),\n                \"Leechers\": $(element).find('td').eq(4).text().trim(),\n                \"Torrent\": $(element).find('div.tt-name a').attr('href'),\n                \"Url\": \"https://www.limetorrents.pro\" + $(element).find('div.tt-name a').next().attr('href')\n            }\n            ALLTORRENT.push(torrent);\n        }\n\n    })\n    return ALLTORRENT;\n\n}\nmodule.exports = limeTorrent"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AAGN,eAAe,YAAY,KAAK,EAAE,OAAO,GAAG;IACxC,IAAI,aAAa,EAAE;IACnB,MAAM,MAAM,CAAC,wCAAwC,EAAE,MAAM,OAAO,EAAE,KAAK,CAAC,CAAC;IAC7E,IAAI;IACJ,IAAI;QACA,OAAO,MAAM,MAAM,GAAG,CAAC,KAAK,UAAU;YAClC,cAAc;QAClB;IAEJ,EAAE,OAAM;QACJ,OAAO;IACX;IAEA,MAAM,IAAI,QAAQ,IAAI,CAAC,KAAK,IAAI;IAEhC,EAAE,oBAAoB,IAAI,CAAC,CAAC,GAAG;QAC3B,IAAI,IAAI,GAAG;YACP,IAAI,mBAAmB,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI;YAC9D,mBAAmB,iBAAiB,KAAK,CAAC;YAC1C,IAAI,MAAM,gBAAgB,CAAC,EAAE,CAAC,IAAI;YAClC,IAAI,WAAW,gBAAgB,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI;YACzD,IAAI,UAAU;gBACV,QAAQ,EAAE,SAAS,IAAI,CAAC,eAAe,IAAI,GAAG,IAAI;gBAClD,QAAQ,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI;gBAC/C,YAAY;gBACZ,OAAO;gBACP,WAAW,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI;gBAClD,YAAY,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI;gBACnD,WAAW,EAAE,SAAS,IAAI,CAAC,iBAAiB,IAAI,CAAC;gBACjD,OAAO,iCAAiC,EAAE,SAAS,IAAI,CAAC,iBAAiB,IAAI,GAAG,IAAI,CAAC;YACzF;YACA,WAAW,IAAI,CAAC;QACpB;IAEJ;IACA,OAAO;AAEX;AACA,OAAO,OAAO,GAAG","debugId":null}},
    {"offset": {"line": 1154, "column": 0}, "map": {"version":3,"sources":["file:///home/noobhacker/Documents/Movies/piratebaye/next_app/app/api/all/%5Bslug%5D/torrent/torrentFunk.js"],"sourcesContent":["const cheerio = require('cheerio')\nconst axios = require('axios')\n\nasync function torrentFunk(query, page=1) {\n    var ALLTORRENT = [];\n    var ALLURL = [];\n    \n    if (page === '' || page === '1') {\n        var url = 'https://www.torrentfunk.com/all/torrents/' + query + '.html'\n    } else {\n        var url = 'https://www.torrentfunk.com/all/torrents/' + query + '/' + page + '.html'\n    }\n\n    let html;\n    try {\n        html = await axios.get(url, headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Linux; Android 12) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.87 Mobile Safari/537.36\"\n        });\n\n    } catch {\n        return null;\n    }\n\n    const $ = cheerio.load(html.data);\n\n    $('.tmain tbody tr').each((i, element) => {\n\n        if (i > 4) {\n            let url = \"https://www.torrentfunk.com\" + $(element).find('td').eq(0).find('a').attr('href');\n            ALLURL.push(url);\n            let torrent = {\n                'Name': $(element).find('td').eq(0).find('a').text().trim(),\n                'Size': $(element).find('td').eq(2).text(),\n                'DateUploaded': $(element).find('td').eq(1).text(),\n                'Uploader': $(element).find('td').eq(5).text(),\n                'Seeders': $(element).find('td').eq(3).text(),\n                'Leechers': $(element).find('td').eq(4).text(),\n                'Url': url\n            }\n            if (torrent.Name !== '') {\n                ALLTORRENT.push(torrent);\n            }\n        }\n    })\n\n    await Promise.all(ALLURL.map(async url => {\n        for (let i = 0; i < ALLTORRENT.length; i++) {\n            if (ALLTORRENT[i]['Url'] === url) {\n                let html;\n                try {\n                    html = await axios.get(url, headers = {\n                        \"User-Agent\": \"Mozilla/5.0 (Linux; Android 12) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.87 Mobile Safari/537.36\"\n                    });\n                } catch {\n                    return;\n                }\n                const $ = cheerio.load(html.data);\n                ALLTORRENT[i].Torrent = $('#right > main > div.content > table:nth-child(3) > tbody > tr > td:nth-child(2) > a').attr('href');\n\n            }\n        }\n\n    }))\n\n    return ALLTORRENT;\n}\nmodule.exports = torrentFunk;\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AAEN,eAAe,YAAY,KAAK,EAAE,OAAK,CAAC;IACpC,IAAI,aAAa,EAAE;IACnB,IAAI,SAAS,EAAE;IAEf,IAAI,SAAS,MAAM,SAAS,KAAK;QAC7B,IAAI,MAAM,8CAA8C,QAAQ;IACpE,OAAO;QACH,IAAI,MAAM,8CAA8C,QAAQ,MAAM,OAAO;IACjF;IAEA,IAAI;IACJ,IAAI;QACA,OAAO,MAAM,MAAM,GAAG,CAAC,KAAK,UAAU;YAClC,cAAc;QAClB;IAEJ,EAAE,OAAM;QACJ,OAAO;IACX;IAEA,MAAM,IAAI,QAAQ,IAAI,CAAC,KAAK,IAAI;IAEhC,EAAE,mBAAmB,IAAI,CAAC,CAAC,GAAG;QAE1B,IAAI,IAAI,GAAG;YACP,IAAI,MAAM,gCAAgC,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC;YACrF,OAAO,IAAI,CAAC;YACZ,IAAI,UAAU;gBACV,QAAQ,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,GAAG,IAAI;gBACzD,QAAQ,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI;gBACxC,gBAAgB,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI;gBAChD,YAAY,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI;gBAC5C,WAAW,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI;gBAC3C,YAAY,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI;gBAC5C,OAAO;YACX;YACA,IAAI,QAAQ,IAAI,KAAK,IAAI;gBACrB,WAAW,IAAI,CAAC;YACpB;QACJ;IACJ;IAEA,MAAM,QAAQ,GAAG,CAAC,OAAO,GAAG,CAAC,OAAM;QAC/B,IAAK,IAAI,IAAI,GAAG,IAAI,WAAW,MAAM,EAAE,IAAK;YACxC,IAAI,UAAU,CAAC,EAAE,CAAC,MAAM,KAAK,KAAK;gBAC9B,IAAI;gBACJ,IAAI;oBACA,OAAO,MAAM,MAAM,GAAG,CAAC,KAAK,UAAU;wBAClC,cAAc;oBAClB;gBACJ,EAAE,OAAM;oBACJ;gBACJ;gBACA,MAAM,IAAI,QAAQ,IAAI,CAAC,KAAK,IAAI;gBAChC,UAAU,CAAC,EAAE,CAAC,OAAO,GAAG,EAAE,uFAAuF,IAAI,CAAC;YAE1H;QACJ;IAEJ;IAEA,OAAO;AACX;AACA,OAAO,OAAO,GAAG","debugId":null}},
    {"offset": {"line": 1215, "column": 0}, "map": {"version":3,"sources":["file:///home/noobhacker/Documents/Movies/piratebaye/next_app/app/api/all/%5Bslug%5D/torrent/torrentProject.js"],"sourcesContent":["const cheerio = require('cheerio')\nconst axios = require('axios')\n\nasync function torrentProject(query, page = '0') {\n    var ALLTORRENT = [];\n    var ALLURL = [];\n    const url = `https://torrentproject2.com/?t=${query}&p=${page}&orderby=seeders`;\n    let html;\n    try {\n        html = await axios.get(url, headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.106 Safari/537.36\"\n        });\n\n    } catch {\n        return null;\n    }\n\n    const $ = cheerio.load(html.data);\n\n    $('.tt div').each((i, element) => {\n\n        if (i > 1) {\n            let url = \"https://torrentproject2.com\" + $(element).find('span').eq(0).find('a').attr('href');\n            ALLURL.push(url);\n            let torrent = {\n                'Name': $(element).find('span:nth-child(1)').text().trim(),\n                'Size': $(element).find('span:nth-child(5)').text(),\n                'DateUploaded': $(element).find('span:nth-child(4)').text().trim(),\n                'Seeders': $(element).find('span:nth-child(2)').text().trim(),\n                'Leechers': $(element).find('span:nth-child(3)').text().trim(),\n                'Url': url\n            }\n            if (torrent.Name !== '') {\n                ALLTORRENT.push(torrent);\n            }\n        }\n    })\n\n    await Promise.all(ALLURL.map(async url => {\n        for (let i = 0; i < ALLTORRENT.length; i++) {\n            if (ALLTORRENT[i]['Url'] === url) {\n                let html;\n                try {\n                    html = await axios.get(url, headers = {\n                        \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.106 Safari/537.36\"\n                    });\n                } catch {\n                    return;\n                }\n                const $ = cheerio.load(html.data);\n                let magnet = $('.usite a').attr('href');\n                let startMagnetIdx = magnet.indexOf('magnet');\n                magnet = magnet.slice(startMagnetIdx);\n                ALLTORRENT[i].Magnet = decodeURIComponent(magnet);\n\n            }\n        }\n\n    }))\n\n    return ALLTORRENT;\n}\n\n\nmodule.exports = torrentProject;"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AAEN,eAAe,eAAe,KAAK,EAAE,OAAO,GAAG;IAC3C,IAAI,aAAa,EAAE;IACnB,IAAI,SAAS,EAAE;IACf,MAAM,MAAM,CAAC,+BAA+B,EAAE,MAAM,GAAG,EAAE,KAAK,gBAAgB,CAAC;IAC/E,IAAI;IACJ,IAAI;QACA,OAAO,MAAM,MAAM,GAAG,CAAC,KAAK,UAAU;YAClC,cAAc;QAClB;IAEJ,EAAE,OAAM;QACJ,OAAO;IACX;IAEA,MAAM,IAAI,QAAQ,IAAI,CAAC,KAAK,IAAI;IAEhC,EAAE,WAAW,IAAI,CAAC,CAAC,GAAG;QAElB,IAAI,IAAI,GAAG;YACP,IAAI,MAAM,gCAAgC,EAAE,SAAS,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC;YACvF,OAAO,IAAI,CAAC;YACZ,IAAI,UAAU;gBACV,QAAQ,EAAE,SAAS,IAAI,CAAC,qBAAqB,IAAI,GAAG,IAAI;gBACxD,QAAQ,EAAE,SAAS,IAAI,CAAC,qBAAqB,IAAI;gBACjD,gBAAgB,EAAE,SAAS,IAAI,CAAC,qBAAqB,IAAI,GAAG,IAAI;gBAChE,WAAW,EAAE,SAAS,IAAI,CAAC,qBAAqB,IAAI,GAAG,IAAI;gBAC3D,YAAY,EAAE,SAAS,IAAI,CAAC,qBAAqB,IAAI,GAAG,IAAI;gBAC5D,OAAO;YACX;YACA,IAAI,QAAQ,IAAI,KAAK,IAAI;gBACrB,WAAW,IAAI,CAAC;YACpB;QACJ;IACJ;IAEA,MAAM,QAAQ,GAAG,CAAC,OAAO,GAAG,CAAC,OAAM;QAC/B,IAAK,IAAI,IAAI,GAAG,IAAI,WAAW,MAAM,EAAE,IAAK;YACxC,IAAI,UAAU,CAAC,EAAE,CAAC,MAAM,KAAK,KAAK;gBAC9B,IAAI;gBACJ,IAAI;oBACA,OAAO,MAAM,MAAM,GAAG,CAAC,KAAK,UAAU;wBAClC,cAAc;oBAClB;gBACJ,EAAE,OAAM;oBACJ;gBACJ;gBACA,MAAM,IAAI,QAAQ,IAAI,CAAC,KAAK,IAAI;gBAChC,IAAI,SAAS,EAAE,YAAY,IAAI,CAAC;gBAChC,IAAI,iBAAiB,OAAO,OAAO,CAAC;gBACpC,SAAS,OAAO,KAAK,CAAC;gBACtB,UAAU,CAAC,EAAE,CAAC,MAAM,GAAG,mBAAmB;YAE9C;QACJ;IAEJ;IAEA,OAAO;AACX;AAGA,OAAO,OAAO,GAAG","debugId":null}},
    {"offset": {"line": 1273, "column": 0}, "map": {"version":3,"sources":["file:///home/noobhacker/Documents/Movies/piratebaye/next_app/app/api/all/%5Bslug%5D/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nconst scrap1337x = require('./torrent/1337x');\nconst scrapNyaa = require('./torrent/nyaaSI');\nconst scrapYts = require('./torrent/yts');\nconst scrapPirateBay = require('./torrent/pirateBay');\nconst scrapTorLock = require('./torrent/torLock');\nconst scrapEzTVio = require('./torrent/ezTV');\nconst torrentGalaxy = require('./torrent/torrentGalaxy');\nconst rarbg = require('./torrent/rarbg');\nconst ettvCentral = require('./torrent/ettv');\nconst zooqle = require('./torrent/zooqle');\nconst kickAss = require('./torrent/kickAss');\nconst bitSearch = require('./torrent/bitSearch');\nconst glodls = require('./torrent/gloTorrents');\nconst magnet_dl = require('./torrent/magnet_dl');\nconst limeTorrent = require('./torrent/limeTorrent');\nconst torrentFunk = require('./torrent/torrentFunk');\nconst torrentProject = require('./torrent/torrentProject');\nexport async function GET(\n  request: Request,\n  context: { params: Promise<{ slug: string }> }\n) {\n  const { slug } = await context.params\n  const data = await combo(slug);\n  console.log(data)\n  return NextResponse.json({ data })\n}\n\nasync function combo(query: any, page? : Number | undefined) {\n    let comboTorrent: any[] = [], timeout = 10000 //wait time before rejecting promised results\n    await Promise.allSettled([\n\n        // Promise.race([new Promise((_, reject) => (\n        //     setTimeout(() => {\n        //         reject({code: 408, message: 'Timeout exceeded'})\n        //     }, timeout))),\n        //     new Promise((resolve, _) => resolve(scrap1337x.torrent1337x(query, page)))\n        // ]),\n        Promise.race([new Promise((_, reject) => (\n            setTimeout(() => {\n                reject({code: 408, message: 'Timeout exceeded'})\n            }, timeout))),\n            new Promise((resolve, _) => resolve(scrapYts.yts('query', 1)))\n        ]),\n        // Promise.race([new Promise((_, reject) => (\n        //     setTimeout(() => {\n        //         reject({code: 408, message: 'Timeout exceeded'})\n        //     }, timeout))),\n        //     new Promise((resolve, _) => resolve(limeTorrent(query, page)))\n        // ]),\n        // Promise.race([new Promise((_, reject) => (\n        //     setTimeout(() => {\n        //         reject({code: 408, message: 'Timeout exceeded'})\n        //     }, timeout))),\n        //     new Promise((resolve, _) => resolve(torrentGalaxy(query, page)))\n        // ]),\n        // Promise.race([new Promise((_, reject) => (\n        //     setTimeout(() => {\n        //         reject({code: 408, message: 'Timeout exceeded'})\n        //     }, timeout))),\n        //     new Promise((resolve, _) => resolve(rarbg(query, page)))\n        // ]),\n        // Promise.race([new Promise((_, reject) => (\n        //     setTimeout(() => {\n        //         reject({code: 408, message: 'Timeout exceeded'})\n        //     }, timeout))),\n        //     new Promise((resolve, _) => resolve(zooqle.zooqle(query, page)))\n        // ]),\n        // Promise.race([new Promise((_, reject) => (\n        //     setTimeout(() => {\n        //         reject({code: 408, message: 'Timeout exceeded'})\n        //     }, timeout))),\n        //     new Promise((resolve, _) => resolve(kickAss(query, page)))\n        // ]),\n        // Promise.race([new Promise((_, reject) => (\n        //     setTimeout(() => {\n        //         reject({code: 408, message: 'Timeout exceeded'})\n        //     }, timeout))),\n        //     new Promise((resolve, _) => resolve(scrapTorLock.torLock(query, page)))\n        // ]),\n        // Promise.race([new Promise((_, reject) => (\n        //     setTimeout(() => {\n        //         reject({code: 408, message: 'Timeout exceeded'})\n        //     }, timeout))),\n        //     new Promise((resolve, _) => resolve(scrapNyaa.nyaaSI(query, page)))\n        // ]),\n        // Promise.race([new Promise((_, reject) => (\n        //     setTimeout(() => {\n        //         reject({code: 408, message: 'Timeout exceeded'})\n        //     }, timeout))),\n        //     new Promise((resolve, _) => resolve(bitSearch(query, page)))\n        // ]),\n        // Promise.race([new Promise((_, reject) => (\n        //     setTimeout(() => {\n        //         reject({code: 408, message: 'Timeout exceeded'})\n        //     }, timeout))),\n        //     new Promise((resolve, _) => resolve(scrapEzTVio.ezTV(query)))\n        // ]),\n        // Promise.race([new Promise((_, reject) => (\n        //     setTimeout(() => {\n        //         reject({code: 408, message: 'Timeout exceeded'})\n        //     }, timeout))),\n        //     new Promise((resolve, _) => resolve(scrapPirateBay.pirateBay(query, page)))\n        // ]),\n        // Promise.race([new Promise((_, reject) => (\n        //     setTimeout(() => {\n        //         reject({code: 408, message: 'Timeout exceeded'})\n        //     }, timeout))),\n        //     new Promise((resolve, _) => resolve(magnet_dl(query, page)))\n        // ]),\n        // Promise.race([new Promise((_, reject) => (\n        //     setTimeout(() => {\n        //         reject({code: 408, message: 'Timeout exceeded'})\n        //     }, timeout))),\n        //     new Promise((resolve, _) => resolve(torrentFunk(query, page)))\n        // ]),\n        // Promise.race([new Promise((_, reject) => (\n        //     setTimeout(() => {\n        //         reject({code: 408, message: 'Timeout exceeded'})\n        //     }, timeout))),\n        //     new Promise((resolve, _) => resolve(glodls(query, page)))\n        // ]),\n        Promise.race([new Promise((_, reject) => (\n            setTimeout(() => {\n                reject({code: 408, message: 'Timeout exceeded'})\n            }, timeout))),\n            new Promise((resolve, _) => resolve(torrentProject(query, page)))\n        ])])\n        .then((comboResult) => {\n            comboTorrent = (comboResult.filter((element) =>\n                element.status === 'fulfilled' && element.value && element.value.length > 0)).map((element) => {\n                return element;\n                // return element.value\n\n            })\n        })\n        .catch(err => console.log(err))\n\n    return comboTorrent;\n}"],"names":[],"mappings":"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","debugId":null}}]
}